name: DAST Scan

on:
  workflow_dispatch: # Manual trigger
  schedule:
    - cron: "0 2 * * *" # Runs daily at 2 AM UTC

jobs:
  zap_af_scan:
    runs-on: ubuntu-latest
    name: ZAP AF Scan
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies and Start Web Application
        run: |
          npm install
          npm run build --if-present
          npm run start &
          echo "Waiting for application to start..."
          sleep 30 # Replace with a robust health check

      - name: Create ZAP Configuration
        run: |
          mkdir -p .zap
          cat > .zap/automation-plan.yaml << 'EOL'
          env:
            contexts:
              - name: "My Web App Context"
                urls:
                  - "http://localhost:3000"  # Adjust this to your application's URL
                includePaths:
                  - "http://localhost:3000.*"  # Adjust this to your application's URL pattern

          jobs:
            - type: passiveScan-config
              parameters:
                maxAlertsPerRule: 0  # 0 = unlimited
                
            - type: spider
              parameters:
                context: "My Web App Context"
                url: "http://localhost:3000"  # Adjust this to your application's URL
                maxDuration: 1
                
            - type: activeScan
              parameters:
                context: "My Web App Context"
                policy: "Default Policy"
                
            - type: report
              parameters:
                template: "traditional-html"
                reportDir: "/zap/reports/"
                reportFile: "zap-report.html"
          EOL
          cat .zap/automation-plan.yaml

      - name: Run ZAP Automation Framework Scan
        run: |
          mkdir -p ${{ github.workspace }}/zap-reports # Create directory for reports
          # The next line allows ZAP in Docker to access localhost services
          docker run --rm \
            -v ${{ github.workspace }}:/zap/wrk/:rw \
            -v ${{ github.workspace }}/zap-reports:/zap/reports/:rw \
            --network="host" \
            ghcr.io/zaproxy/zaproxy:stable zap.sh -cmd -autorun /zap/wrk/.zap/automation-plan.yaml

      - name: Upload ZAP AF Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-af-report-artifact
          path: ${{ github.workspace }}/zap-reports/ # Path to directory containing generated reports
          if-no-files-found: warn # Changed from 'error' to 'warn' to prevent workflow failure if no reports generated
