name: Testing Some Random Stuff

on:
  pull_request:
    branches: [ ui ]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write # This is required for actions/checkout

jobs:
  logging:
    environment:
        name: Production
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set outputs
      id: commit_id
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Get Current Branch
      id: get_branch
      run: echo "##[set-output name=branch;]$(echo ${{ github.head_ref || github.ref_name }})"
    - name: Set Environment Type
      id: set_env
      run: |
        BRANCH="${{ steps.get_branch.outputs.branch }}"
        if [ "$BRANCH" == "main" ]; then
          echo "##[set-output name=env_type;]Production"
        elif [ "$BRANCH" == "uat" ]; then
          echo "##[set-output name=env_type;]Preview"
        elif [ "$BRANCH" == "staging" ]; then
          echo "##[set-output name=env_type;]Development"
        else
          echo "##[set-output name=env_type;]Unknown"
        fi
    - name: Github Event Name
      run: echo "This is the github event name ${{ github.event_name }}"
    - name: Github Event Action
      run: echo "This is the github event action ${{ github.event.action }}"
    - name: Github Event Ref
      run: echo "This is the github event ref ${{ github.event.ref }}"
    - name: Github Event Pull Request Merged
      run: echo "This is the github event pull_request merged ${{ github.event.pull_request.merged }}"
    - name: Deploy with Vercel
      run: vercel pull --yes --environment=${{ steps.set_env.outputs.env_type }} --token=${{ secrets.VERCEL_TOKEN }}
    - name: All github actions
      run: echo "This is the github actions ${{ toJson(github) }}"
    - name: All github events
      run: echo "This is the github events ${{ toJson(github.event) }}"