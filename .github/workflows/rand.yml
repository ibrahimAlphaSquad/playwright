name: Testing Some Random Stuff

on:
  push:
    branches: [ ui ]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write # This is required for actions/checkout

jobs:
  logging:
      environment:
          name: Production 
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - name: Set outputs
        id: commit_id
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Get Current Branch
        id: get_branch
        run: echo "branch_name=$(echo ${{ github.head_ref || github.ref_name }})" >> $GITHUB_ENV
      - name: Set Environment Type
        id: set_env
        run: |
          if [ "$branch_name" == "main" ]; then
            echo "env_type=production" >> $GITHUB_ENV
          elif [ "$branch_name" == "uat" ]; then
            echo "env_type=preview" >> $GITHUB_ENV
          elif [ "$branch_name" == "staging" ]; then
            echo "env_type=development" >> $GITHUB_ENV
          else
            echo "env_type=unknown" >> $GITHUB_ENV
          fi
      - name: Github Event Name
        run: echo "This is the github event name ${{ github.event_name }}"
      - name: Github Event Action
        run: echo "This is the github event action ${{ github.event.action }}"
      - name: Github Event Ref
        run: echo "This is the github event ref ${{ github.event.ref }}"
      - name: Github Event Pull Request Merged
        run: echo "This is the github event pull_request merged ${{ github.event.pull_request.merged }}"
      - name: Github Event Pull Request Number
        run: echo "This is the pull_request merged check ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true }}"
      - name: Deploy with Vercel
        run: vercel pull --yes --environment=${{ env.env_type }} --token=${{ secrets.VERCEL_TOKEN }}
      - name: All github actions
        run: echo "This is the github actions ${{ toJson(github) }}"
      - name: All github events
        run: echo "This is the github events ${{ toJson(github.event) }}"
      - name: Get current Deployed Branch
        run: |
          echo "Deployed branch: $branch_name"