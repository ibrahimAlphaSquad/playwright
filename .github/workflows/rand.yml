name: Testing Some Random Stuff

on:
  pull_request:
    branches: [ ui, merge-test ]
    types:
      - closed

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write # This is required for actions/checkout

jobs:
  logging:
      if: github.event.pull_request.merged == true
      environment:
          name: Production 
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - name: Set outputs
        id: commit_id
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Get Current Branch
        id: get_branch
        run: echo "name={name}::{branch} >> $GITHUB_STATE $(echo ${{ github.head_ref || github.ref_name }})"
      - name: Set Environment Type
        id: set_env
        run: |
          BRANCH="${{ steps.get_branch.outputs.branch }}"
          if [ "$BRANCH" == "main" ]; then
            echo "name={env_type}::{production} >> $GITHUB_STATE"
          elif [ "$BRANCH" == "merge-test" ]; then
            echo "name={env_type}::{preview} >> $GITHUB_STATE"
          elif [ "$BRANCH" == "staging" ]; then
            echo "name={env_type}::{development} >> $GITHUB_STATE"
          else
            echo "name={env_type}::{Unknown} >> $GITHUB_STATE"
          fi
      - name: Github Event Name
        run: echo "This is the github event name ${{ github.event_name }}"
      - name: Github Event Action
        run: echo "This is the github event action ${{ github.event.action }}"
      - name: Github Event Ref
        run: echo "This is the github event ref ${{ github.event.ref }}"
      - name: Github Event Pull Request Merged
        run: echo "This is the github event pull_request merged ${{ github.event.pull_request.merged }}"
      - name: Github Event Pull Request Number
        run: echo "This is the pull_request merged check ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true }}"
      - name: Deploy with Vercel
        run: vercel pull --yes --environment=${{ steps.set_env.outputs.env_type }} --token=${{ secrets.VERCEL_TOKEN }}
      - name: All github actions
        run: echo "This is the github actions ${{ toJson(github) }}"
      - name: All github events
        run: echo "This is the github events ${{ toJson(github.event) }}"