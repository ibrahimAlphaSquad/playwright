name: Deployment Automation

on:
  # pull_request:
  #   branches: [ ui, merge-test ]
  #   types:
  #     - closed
  push:
    branches: [ main, merge-test, staging, ui ]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write # This is required for actions/checkout

jobs:
  logging:
      # if: github.event.pull_request.merged == true
      environment:
        name: Production 
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - name: Set outputs
        id: commit_id
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Get Current Branch
        id: get_branch
        run: echo "::set-output name=branch::$(echo ${{ github.ref_name }})"
      - name: Set Environment Type
        id: set_env
        run: |
          BRANCH="${{ steps.get_branch.outputs.branch }}"
          if [ "$BRANCH" == "main" ]; then
            echo "name={env_type}::{production} >> $GITHUB_STATE"
          elif [ "$BRANCH" == "merge-test" ]; then
            echo "name={env_type}::{preview} >> $GITHUB_STATE"
          elif [ "$BRANCH" == "staging" ]; then
            echo "name={env_type}::{development} >> $GITHUB_STATE"
          else
            echo "name={env_type}::{Unknown} >> $GITHUB_STATE"
          fi
      - name: Get current branch
        run: echo "Current branch is ${{ steps.get_branch.outputs.branch }}"
      - name: Get current environment
        run: echo "Current environment is ${{ steps.set_env.outputs.env_type }}"
      - name: Get commit id
        run: echo "Commit id is ${{ steps.commit_id.outputs.sha_short }}"
      - name: Deploy with Vercel
        run: vercel pull --yes --environment=${{ steps.set_env.outputs.env_type }} --token=${{ secrets.VERCEL_TOKEN }}
      - name: Vercel Deployment Status
        run: vercel --token=${{ secrets.VERCEL_TOKEN }}
      - name: Set Deployment Status
        run: echo "Deployment status is ${{ steps.vercel.outputs.status }}"
      - name: Set Deployment URL
        run: echo "Deployment URL is ${{ steps.vercel.outputs.url }}"
      - name: Set Deployment Preview URL
        run: echo "Deployment Preview URL is ${{ steps.vercel.outputs.preview_url }}"
      - name: Set Deployment Alias
        run: echo "Deployment Alias is ${{ steps.vercel.outputs.alias }}"
      - name: Output to summary
        run: echo "### Hello world! :rocket:" >> $GITHUB_STEP_SUMMARY

