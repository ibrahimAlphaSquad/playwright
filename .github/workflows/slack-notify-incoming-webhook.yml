name: Slack incoming-webhook PR Notifications
on:
  pull_request:
    types:
      - opened
      - closed
      - reopened
      - synchronize
  pull_request_review:
    types:
      - submitted
  pull_request_review_comment:
    types:
      - created

env:
  SLACK_CHANNEL: alpha-pr-review
  COLOR_PR_OPENED: "#28a745"
  COLOR_PR_MERGED: "#6f42c1"
  COLOR_PR_CLOSED: "#dc3545"
  COLOR_PR_REOPENED: "#ffc107"
  COLOR_PR_SYNCHRONIZED: "#17a2b8"
  COLOR_PR_REVIEW: "#007bff"
  COLOR_PR_COMMENT: "#28a745"
  COLOR_UNKNOWN: "#ffc107"

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      # Create payload file first - this is required for v2.0.0
      - name: Create payload file
        id: create-payload
        run: |
          mkdir -p ./tmp
          echo '{
            "channel": "${{ env.SLACK_CHANNEL }}",
            "attachments": [
              {
                "color": "${{ github.event_name == '"'"'pull_request'"'"' && github.event.action == '"'"'opened'"'"' && env.COLOR_PR_OPENED || github.event_name == '"'"'pull_request'"'"' && github.event.action == '"'"'closed'"'"' && github.event.pull_request.merged && env.COLOR_PR_MERGED || github.event_name == '"'"'pull_request'"'"' && github.event.action == '"'"'closed'"'"' && !github.event.pull_request.merged && env.COLOR_PR_CLOSED || github.event_name == '"'"'pull_request'"'"' && github.event.action == '"'"'reopened'"'"' && env.COLOR_PR_REOPENED || github.event_name == '"'"'pull_request'"'"' && github.event.action == '"'"'synchronize'"'"' && env.COLOR_PR_SYNCHRONIZED || github.event_name == '"'"'pull_request_review'"'"' && env.COLOR_PR_REVIEW || github.event_name == '"'"'pull_request_review_comment'"'"' && env.COLOR_PR_COMMENT || env.COLOR_UNKNOWN }}",
                "pretext": "*${{ github.repository }}*",
                "title": "${{ github.event.pull_request.title }} #${{ github.event.pull_request.number }}",
                "title_link": "${{ github.event.pull_request.html_url }}",
                "text": "${{ github.event_name == '"'"'pull_request'"'"' && github.event.action == '"'"'opened'"'"' && format('"'"'ðŸŸ¢ New PR opened by *{0}*'"'"', github.event.pull_request.user.login) || github.event_name == '"'"'pull_request'"'"' && github.event.action == '"'"'closed'"'"' && github.event.pull_request.merged && format('"'"'ðŸŸ£ PR merged by *{0}*'"'"', github.event.sender.login) || github.event_name == '"'"'pull_request'"'"' && github.event.action == '"'"'closed'"'"' && !github.event.pull_request.merged && format('"'"'ðŸ”´ PR closed without merging by *{0}*'"'"', github.event.sender.login) || github.event_name == '"'"'pull_request'"'"' && github.event.action == '"'"'reopened'"'"' && format('"'"'ðŸŸ¡ PR reopened by *{0}*'"'"', github.event.sender.login) || github.event_name == '"'"'pull_request'"'"' && github.event.action == '"'"'synchronize'"'"' && format('"'"'ðŸ”µ PR updated with new commits by *{0}*'"'"', github.event.sender.login) || github.event_name == '"'"'pull_request_review'"'"' && format('"'"'ðŸ‘€ Review *{0}* by *{1}*'"'"', github.event.review.state, github.event.review.user.login) || github.event_name == '"'"'pull_request_review_comment'"'"' && format('"'"'ðŸ’¬ New review comment by *{0}*: _{1}_'"'"', github.event.comment.user.login, github.event.comment.body | slice(0, 100)) || '"'"'Unknown event'"'"' }}",
                "footer": "GitHub Actions",
                "footer_icon": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
                "ts": "${{ github.event.pull_request.updated_at || github.event.comment.created_at || github.event.pull_request_review.submitted_at || github.event.pull_request.created_at }}"
              }
            ]
          }' > ./tmp/payload.json

      - name: Send to Slack
        uses: slackapi/slack-github-action@v2.0.0
        with:
          # In v2.0.0, you must use payload-file-path instead of inline payload
          payload-file-path: ./tmp/payload.json
          # Enable template variable substitution (new requirement in v2.0.0)
          payload-templated: true
          # Specify webhook URL and type (new requirement in v2.0.0)
          webhook: ${{ secrets.SLACK_INCOMING_WEBHOOK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          # Optional: Set to true to make the action fail if Slack API returns an error
          errors: true