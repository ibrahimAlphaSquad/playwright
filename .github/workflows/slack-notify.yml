name: Slack PR Notifications
on:
  pull_request:
    types:
      - opened
      - closed
      - reopened
      - synchronize # Triggered when new commits are pushed to the PR
  pull_request_review:
    types:
      - submitted
  pull_request_review_comment:
    types:
      - created

jobs:
  notify:
    name: Send Slack Notification
    runs-on: ubuntu-latest
    steps:
      - name: Determine Notification Message
        id: message
        run: |
          EVENT_TYPE="${{ github.event.action }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          
          case "$EVENT_TYPE" in
            "opened")
              MESSAGE="New PR created by @$PR_AUTHOR: *$PR_TITLE* <$PR_URL|View PR>"
              COLOR="good"
              ;;
            "closed")
              if [ "${{ github.event.pull_request.merged }}" == "true" ]; then
                MESSAGE="PR merged by @$PR_AUTHOR: *$PR_TITLE* <$PR_URL|View PR>"
                COLOR="#6f42c1"
              else
                MESSAGE="PR closed by @$PR_AUTHOR: *$PR_TITLE* <$PR_URL|View PR>"
                COLOR="danger"
              fi
              ;;
            "reopened")
              MESSAGE="PR reopened by @$PR_AUTHOR: *$PR_TITLE* <$PR_URL|View PR>"
              COLOR="warning"
              ;;
            "synchronize")
              MESSAGE="New commits added to PR by @$PR_AUTHOR: *$PR_TITLE* <$PR_URL|View PR>"
              COLOR="#17a2b8"
              ;;
            "submitted")
              REVIEWER="${{ github.event.review.user.login }}"
              REVIEW_STATE="${{ github.event.review.state }}"
              MESSAGE="PR review $REVIEW_STATE by @$REVIEWER on: *$PR_TITLE* <$PR_URL|View PR>"
              COLOR="#007bff"
              ;;
            "created")
              COMMENTER="${{ github.event.comment.user.login }}"
              MESSAGE="New comment by @$COMMENTER on PR: *$PR_TITLE* <$PR_URL|View PR>"
              COLOR="#28a745"
              ;;
            *)
              MESSAGE="Unknown event on PR: *$PR_TITLE* <$PR_URL|View PR>"
              COLOR="warning"
              ;;
          esac
          
          echo "SLACK_MESSAGE=$MESSAGE" >> $GITHUB_OUTPUT
          echo "SLACK_COLOR=$COLOR" >> $GITHUB_OUTPUT

      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: github-notifications
          SLACK_MESSAGE: ${{ steps.message.outputs.SLACK_MESSAGE }}
          SLACK_COLOR: ${{ steps.message.outputs.SLACK_COLOR }}
          SLACK_TITLE: PR Notification
          SLACK_USERNAME: GitHub Bot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}